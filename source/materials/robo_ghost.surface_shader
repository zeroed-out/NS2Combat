<shader>

	<inputs>
	</inputs>	

	<params>
        <param name="translucent">true</param>
		<param name="vsPosition">true</param>
		<param name="vsNormal">true</param>
	</params>
	
	<code>
	<![CDATA[
		void MaterialShader(in Material_Input input, inout Material material)
		{
		
			const float3 baseTint = float3(-0.2, -0.2, -0.2);
			float a = saturate(sin(time * 5.0 + input.texCoord.x * 5.0));
			const float3 tint = float3(0.01, a * 0.15 + 0.1 , a*0.4 + 0.2);
			
			float3 ssDir = normalize(input.vsPosition);
            float intensity = -dot(ssDir, input.vsNormal);
            intensity = 1.0 - saturate(intensity);
			
			// this is aparently faster than just math.pow but I did not benchmark
            intensity = intensity * intensity * intensity * intensity * intensity * intensity * intensity * intensity;
			float fresnelIntensity = clamp(intensity, 0, 0.5);
		
			 
			material.transmissionColor = input.color.rgb + baseTint;
			material.emissive = fresnelIntensity * tint;
			
		}
	]]>
	</code>

</shader>